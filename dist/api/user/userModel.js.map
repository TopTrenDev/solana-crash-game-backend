{"version":3,"sources":["../../../src/api/user/userModel.ts","../../../src/common/utils/commonValidation.ts"],"sourcesContent":["import { extendZodWithOpenApi } from '@asteasolutions/zod-to-openapi';\r\nimport { z } from 'zod';\r\n\r\nimport { commonValidations } from '@/common/utils/commonValidation';\r\n\r\nextendZodWithOpenApi(z);\r\n\r\nexport type User = z.infer<typeof UserSchema>;\r\nexport const UserSchema = z.object({\r\n  id: z.number(),\r\n  name: z.string(),\r\n  email: z.string().email(),\r\n  age: z.number(),\r\n  createdAt: z.date(),\r\n  updatedAt: z.date(),\r\n});\r\n\r\n// Input Validation for 'GET users/:id' endpoint\r\nexport const GetUserSchema = z.object({\r\n  params: z.object({ id: commonValidations.id }),\r\n});\r\n","import { z } from 'zod';\r\n\r\nexport const commonValidations = {\r\n  id: z\r\n    .string()\r\n    .refine((data) => !isNaN(Number(data)), 'ID must be a numeric value')\r\n    .transform(Number)\r\n    .refine((num) => num > 0, 'ID must be a positive number'),\r\n  // ... other common validations\r\n};\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAqC;AACrC,IAAAA,cAAkB;;;ACDlB,iBAAkB;AAEX,IAAM,oBAAoB;AAAA,EAC/B,IAAI,aACD,OAAO,EACP,OAAO,CAAC,SAAS,CAAC,MAAM,OAAO,IAAI,CAAC,GAAG,4BAA4B,EACnE,UAAU,MAAM,EAChB,OAAO,CAAC,QAAQ,MAAM,GAAG,8BAA8B;AAAA;AAE5D;;;IDJA,4CAAqB,aAAC;AAGf,IAAM,aAAa,cAAE,OAAO;AAAA,EACjC,IAAI,cAAE,OAAO;AAAA,EACb,MAAM,cAAE,OAAO;AAAA,EACf,OAAO,cAAE,OAAO,EAAE,MAAM;AAAA,EACxB,KAAK,cAAE,OAAO;AAAA,EACd,WAAW,cAAE,KAAK;AAAA,EAClB,WAAW,cAAE,KAAK;AACpB,CAAC;AAGM,IAAM,gBAAgB,cAAE,OAAO;AAAA,EACpC,QAAQ,cAAE,OAAO,EAAE,IAAI,kBAAkB,GAAG,CAAC;AAC/C,CAAC;","names":["import_zod"]}
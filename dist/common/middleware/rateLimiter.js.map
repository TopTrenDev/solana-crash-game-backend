{"version":3,"sources":["../../../src/common/middleware/rateLimiter.ts","../../../src/common/utils/envConfig.ts"],"sourcesContent":["import { Request } from 'express';\r\nimport { rateLimit } from 'express-rate-limit';\r\n\r\nimport { env } from '@/common/utils/envConfig';\r\n\r\nconst rateLimiter = rateLimit({\r\n  legacyHeaders: true,\r\n  // limit: env.COMMON_RATE_LIMIT_MAX_REQUESTS,\r\n  limit: 10000,\r\n  message: 'Too many requests, please try again later.',\r\n  standardHeaders: true,\r\n  windowMs: 15 * 60 * env.COMMON_RATE_LIMIT_WINDOW_MS,\r\n  keyGenerator: (req: Request) => req.ip as string,\r\n});\r\n\r\nexport default rateLimiter;\r\n","import dotenv from 'dotenv';\r\nimport { cleanEnv, host, num, port, str, testOnly } from 'envalid';\r\n\r\ndotenv.config();\r\n\r\nexport const env = cleanEnv(process.env, {\r\n  NODE_ENV: str({ devDefault: testOnly('test'), choices: ['development', 'production', 'test'] }),\r\n  HOST: host({ devDefault: testOnly('localhost') }),\r\n  PORT: port({ devDefault: testOnly(3000) }),\r\n  CORS_ORIGIN: str({ devDefault: testOnly('http://localhost:3000') }),\r\n  COMMON_RATE_LIMIT_MAX_REQUESTS: num({ devDefault: testOnly(1000) }),\r\n  COMMON_RATE_LIMIT_WINDOW_MS: num({ devDefault: testOnly(1000) }),\r\n});\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gCAA0B;;;ACD1B,oBAAmB;AACnB,qBAAyD;AAEzD,cAAAA,QAAO,OAAO;AAEP,IAAM,UAAM,yBAAS,QAAQ,KAAK;AAAA,EACvC,cAAU,oBAAI,EAAE,gBAAY,yBAAS,MAAM,GAAG,SAAS,CAAC,eAAe,cAAc,MAAM,EAAE,CAAC;AAAA,EAC9F,UAAM,qBAAK,EAAE,gBAAY,yBAAS,WAAW,EAAE,CAAC;AAAA,EAChD,UAAM,qBAAK,EAAE,gBAAY,yBAAS,GAAI,EAAE,CAAC;AAAA,EACzC,iBAAa,oBAAI,EAAE,gBAAY,yBAAS,uBAAuB,EAAE,CAAC;AAAA,EAClE,oCAAgC,oBAAI,EAAE,gBAAY,yBAAS,GAAI,EAAE,CAAC;AAAA,EAClE,iCAA6B,oBAAI,EAAE,gBAAY,yBAAS,GAAI,EAAE,CAAC;AACjE,CAAC;;;ADPD,IAAM,kBAAc,qCAAU;AAAA,EAC5B,eAAe;AAAA;AAAA,EAEf,OAAO;AAAA,EACP,SAAS;AAAA,EACT,iBAAiB;AAAA,EACjB,UAAU,KAAK,KAAK,IAAI;AAAA,EACxB,cAAc,CAAC,QAAiB,IAAI;AACtC,CAAC;AAED,IAAO,sBAAQ;","names":["dotenv"]}
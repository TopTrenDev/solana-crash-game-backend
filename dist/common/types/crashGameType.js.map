{"version":3,"sources":["../../../src/common/types/crashGameType.ts"],"sourcesContent":["import { VIPLevelType } from './vipType';\r\n\r\nexport interface GameStateType {\r\n  _id: string | null;\r\n  status: number;\r\n  crashPoint: number | null;\r\n  startedAt: Date | null;\r\n  duration: number | null;\r\n  players: { [key: string]: BetType };\r\n  pending: { [key: string]: PendingBetType };\r\n  pendingCount: number;\r\n  pendingBets: PendingBetType[];\r\n  privateSeed: string | null;\r\n  privateHash: string | null;\r\n  publicSeed: string | null;\r\n  createdAt?: Date;\r\n}\r\n\r\nexport interface BetType {\r\n  playerID: string;\r\n  username: string;\r\n  avatar?: string;\r\n  betAmount: number;\r\n  status: number;\r\n  level: VIPLevelType;\r\n  stoppedAt?: number;\r\n  autoCashOut: number;\r\n  winningAmount?: number;\r\n  forcedCashout?: boolean;\r\n  createdAt?: Date;\r\n}\r\n\r\nexport interface PendingBetType {\r\n  betAmount: number;\r\n  autoCashOut?: number;\r\n  username: string;\r\n}\r\n\r\nexport type FormattedPlayerBetType = Pick<\r\n  BetType,\r\n  'playerID' | 'username' | 'avatar' | 'betAmount' | 'status' | 'level' | 'stoppedAt' | 'winningAmount'\r\n>;\r\n\r\nexport interface FormattedGameHistoryType\r\n  extends Pick<GameStateType, '_id' | 'privateHash' | 'privateSeed' | 'publicSeed' | 'crashPoint' | 'createdAt'> {}\r\n\r\n// Example of GAME_STATES enum for better type safety\r\nenum GAME_STATES {\r\n  NotStarted = 1,\r\n  Starting = 2,\r\n  InProgress = 3,\r\n  Over = 4,\r\n  Blocking = 5,\r\n  Refunded = 6,\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AAAA;","names":[]}